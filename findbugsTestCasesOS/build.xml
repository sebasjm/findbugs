<!-- Prerequisites:
  Apache Ant 1.7+
  Apache Ivy 2.4+: http://ant.apache.org/ivy/
  git, unzip
-->
<project name="findbugsTestCasesOS" default="build" xmlns:ivy="antlib:org.apache.ivy.ant">
  <target name="build" depends="retrieve,run"/>

  <target name="initCurrent" unless="revision">
    <property name="findbugs.home" value="../findbugs"/>
    <property name="findbugs.filename" value="findbugs"/>
  </target>

  <target name="initBaseline" if="revision" depends="-buildBaseline">
    <property name="findbugs.home" value="fbexport/findbugs"/>
    <property name="findbugs.filename" value="findbugs.${revision}"/>
  </target>

  <target name="init" depends="initCurrent,initBaseline">
    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpath="../findbugs/lib/findbugs-ant.jar"/>
    <property name="java.executable" value="" />
    <property name="enabledExtraVisitors" value="+CheckExpectedWarnings,+InefficientMemberAccess,+EmptyZipFileEntry"/>
    <property name="maxHeap" value="-Xmx900m"/>
  </target>

  <target name="run" depends="init">
    <fail unless="testproject" message="please specify testproject (one of subfolders in projects folder)"/>
    <mkdir dir="projects/${testproject}/build"/>
    <findbugs home="${findbugs.home}"  jvmargs="-ea ${maxHeap}"
         jvm="${java.executable}"
         output="xml:withMessages" timestampNow="true" reportLevel="low" chooseVisitors="${enabledExtraVisitors}" outputFile="projects/${testproject}/build/${findbugs.filename}.xml">
        <fileset dir="projects/${testproject}/jar" includes="*.jar"/>
        <sourcePath>
           <fileset dir="projects/${testproject}/source" includes="*.jar"/>
        </sourcePath>
        <auxclasspath>
           <fileset dir="projects/${testproject}/dep" includes="*.jar"/>
        </auxclasspath>
    </findbugs>
  </target>

  <!-- property testproject must be set 
    if -Dretrieve-debug=true is specified then ivy-fixed.xml will be created in the current directory which contains all the dependencies
    usage examples:
    $ ant retrieve -Dtestproject=commons-lang-2.0
    $ ant retrieve -Dtestproject=ant-1.7.0
    three folders will be created inside project directory:
    - jar: project jars
    - source: project source
    - dep: project dependencies
  -->
  <target name="retrieve">
    <fail unless="testproject" message="please specify testproject (one of subfolders in projects folder)"/>
    <local name="ivyfile"/>
    <property name="ivyfile" value="projects/${testproject}/ivy.xml"/>
    <available file="${ivyfile}" property="testproject.available"/>
    <fail unless="testproject.available" message="unable to find ${ivyfile}"/>
    <echo message="Retrieving '${testproject}'"/>
    <ivy:resolve file="${ivyfile}" transitive="true" conf="default" />
    <ivy:retrieve pattern="projects/${testproject}/dep/[artifact]-[revision].[ext]" type="jar"/>
    <ant target="-retrieve-debug"/>
    <ivy:resolve file="${ivyfile}" transitive="false" conf="default" />
    <ivy:retrieve pattern="projects/${testproject}/dep/[artifact]-[revision].[ext]" type="jar" overwriteMode="never" setId="ivy-remove-from-deps"/>
    <delete>
      <fileset refid="ivy-remove-from-deps"/>
    </delete>
    <ivy:retrieve pattern="projects/${testproject}/[type]/[artifact]-[revision].[ext]" type="jar,source"/>
  </target>

  <target name="-retrieve-debug" if="retrieve-debug">
    <ivy:fixdeps tofile="ivy-fixed.xml" />
  </target>

  <!-- export and build some specific revision of findbugs.
    usage examples:
    $ ant buildBaseline -Drevision=3.0.0
    $ ant buildBaseline -Drevision=master
    $ ant buildBaseline -Drevision=d4c94995d235 
  -->
  <target name="buildBaseline">
    <fail unless="revision" message="please specify revision (git revision, branch or tag)"/>
    <ant target="-buildBaseline"/>
  </target>

  <target name="-buildBaseline" depends="-export" if="revision">
    <ant dir="fbexport/findbugs"/>
  </target>

  <!-- export some specific revision of findbugs.
    usage examples:
    $ ant build-revision -Drevision=3.0.0
    $ ant build-revision -Drevision=master
    $ ant build-revision -Drevision=d4c94995d235 
  -->
  <target name="export">
    <fail unless="revision" message="please specify revision (git revision, branch or tag)"/>
    <ant target="-export"/>
  </target>

  <target name="-export" if="revision">
    <mkdir dir="fbexport"/>
    <delete>
        <fileset dir="fbexport" includes="**"/>
    </delete>
    <echo message="Exporting '${revision}' into fbexport"/>
    <exec executable="git" spawn="false" dir="..">
            <arg value="archive"/>
            <arg value="${revision}"/>
            <arg value="findbugs"/>
            <arg value="-o"/>
            <arg value="findbugsTestCasesOS/fbexport/fb.zip"/>
    </exec>
    <exec executable="unzip" dir="fbexport">
            <arg value="-q"/>
            <arg value="fb.zip"/>
    </exec>
    <delete file="fbexport/fb.zip"/>
  </target>

  <!-- remove testproject jars and previously exported findbugs revision code
  -->
  <target name="clean">
    <delete includeemptydirs="true">
        <fileset dir="fbexport" includes="**"/>
        <fileset dir="projects" includes="*/source/**"/>
        <fileset dir="projects" includes="*/dep/**"/>
        <fileset dir="projects" includes="*/jar/**"/>
    </delete>
  </target>
</project>